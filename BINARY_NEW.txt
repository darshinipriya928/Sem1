/******************************************************************************

Welcome to GDB Online.
GDB online is an online compiler and debugger tool for C, C++, Python, PHP, Ruby, 
C#, VB, Perl, Swift, Prolog, Javascript, Pascal, HTML, CSS, JS
Code, Compile, Run and Debug online from anywhere in world.

*******************************************************************************/
#include <stdio.h>

int i = 1;
//l r x
int binarySearch(int arr[], int startingIndex, int endingIndex, int NumbertoFind) {
    printf("calling time : %d\n", i );
    i++;
    if (endingIndex >= startingIndex) {
        int mid = startingIndex + (endingIndex - startingIndex) / 2;
        printf("mid %d\n", mid);
        // If the element is present at the middle
        // itself
        if (arr[mid] == NumbertoFind) {
            printf("inside mid\n");
            return mid;
        }
        // If element is smaller than mid, then
        // it can only be present in left subarray
        if (arr[mid] > NumbertoFind) {
            printf("inside mid > 10\n");
            return binarySearch(arr, startingIndex, mid - 1, NumbertoFind);
        }
        // Else the element can only be present
        // in right subarray
        printf("outside of if\n");
        return binarySearch(arr, mid + 1, endingIndex, NumbertoFind);
    }
    // We reach here when element is not present in array
    return -10000;
}

int main(void) {
    int arr[] = { 2, 3, 4, 10, 40, 56, 78, 89 };
    int n = sizeof(arr) / sizeof(arr[0]);
    printf("n value %d\n", n);
    int x = 3;
    int result = binarySearch(arr, 0, n - 1, x);
    (result == -10000) ? printf("Element is not present in array"): printf("Element is present at index %d",result);
    return 0;
}

